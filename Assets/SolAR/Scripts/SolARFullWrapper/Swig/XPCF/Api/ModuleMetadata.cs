//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XPCF.Api {

    using XPCF.Core;
    using XPCF.Collection;
    using XPCF.Properties;
    using XPCF.Traits;

public class ModuleMetadata : InterfaceMetadata {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ModuleMetadata(global::System.IntPtr cPtr, bool cMemoryOwn) : base(xpcf_apiPINVOKE.ModuleMetadata_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ModuleMetadata obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ModuleMetadata() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          xpcf_apiPINVOKE.delete_ModuleMetadata(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ModuleMetadata(string name, UUID moduleID, string description, string modulePath) : this(xpcf_apiPINVOKE.new_ModuleMetadata__SWIG_0(name, UUID.getCPtr(moduleID), description, modulePath), true) {
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public ModuleMetadata(string name, string moduleID, string description, string modulePath) : this(xpcf_apiPINVOKE.new_ModuleMetadata__SWIG_1(name, moduleID, description, modulePath), true) {
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addComponent(ComponentMetadata componentInfo) {
    xpcf_apiPINVOKE.ModuleMetadata_addComponent(swigCPtr, ComponentMetadata.getCPtr(componentInfo));
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void removeComponent(UUID componentUUID) {
    xpcf_apiPINVOKE.ModuleMetadata_removeComponent(swigCPtr, UUID.getCPtr(componentUUID));
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getPath() {
    string ret = xpcf_apiPINVOKE.ModuleMetadata_getPath(swigCPtr);
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UUIDEnumerable getComponents() {
    UUIDEnumerable ret = new UUIDEnumerable(xpcf_apiPINVOKE.ModuleMetadata_getComponents(swigCPtr), false);
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ComponentMetadataEnumerable getComponentsMetadata() {
    ComponentMetadataEnumerable ret = new ComponentMetadataEnumerable(xpcf_apiPINVOKE.ModuleMetadata_getComponentsMetadata(swigCPtr), false);
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ComponentMetadata getComponentMetadata(UUID componentUUID) {
    global::System.IntPtr cPtr = xpcf_apiPINVOKE.ModuleMetadata_getComponentMetadata(swigCPtr, UUID.getCPtr(componentUUID));
    ComponentMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ComponentMetadata(cPtr, true);
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void declareComponent(string uuid, string name, string description) {
    xpcf_apiPINVOKE.ModuleMetadata_declareComponent(swigCPtr, uuid, name, description);
    if (xpcf_apiPINVOKE.SWIGPendingException.Pending) throw xpcf_apiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
