//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SolAR.Datastructure {

public class solar_datastructure {
  public static global::System.IntPtr newPointer_BufferInternal() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_BufferInternal();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_CamDistortion() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_CamDistortion();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_CloudPoint() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_CloudPoint();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_DescriptorBuffer() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_DescriptorBuffer();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_DescriptorMatch() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_DescriptorMatch();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Edge2Df() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Edge2Df();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Edge2Di() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Edge2Di();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Frame() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Frame();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Image() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Image();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Keyframe() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Keyframe();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Keypoint() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Keypoint();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Map() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Map();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Point2Df() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Point2Df();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Point2Di() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Point2Di();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Point3Df() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Point3Df();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Point3Di() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Point3Di();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Rectanglei() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Rectanglei();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Sizef() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Sizef();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Sizei() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Sizei();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_SquaredBinaryPattern() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_SquaredBinaryPattern();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_SquaredBinaryPatternMatrix() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_SquaredBinaryPatternMatrix();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Transform2Df() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Transform2Df();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Transform3Df() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Transform3Df();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr newPointer_Vector3f() {
    global::System.IntPtr ret = solar_datastructurePINVOKE.newPointer_Vector3f();
    if (solar_datastructurePINVOKE.SWIGPendingException.Pending) throw solar_datastructurePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static readonly double SOLAR_PI = solar_datastructurePINVOKE.SOLAR_PI_get();
  public static readonly double SOLAR_RAD2DEG = solar_datastructurePINVOKE.SOLAR_RAD2DEG_get();
  public static readonly double SOLAR_DEG2RAD = solar_datastructurePINVOKE.SOLAR_DEG2RAD_get();
}

}
